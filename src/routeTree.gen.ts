/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UsersPointsImport } from './routes/users-points'
import { Route as UserStatisticsImport } from './routes/user-statistics'
import { Route as UserImport } from './routes/user'
import { Route as LoginImport } from './routes/login'
import { Route as R404Import } from './routes/404'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const UsersPointsRoute = UsersPointsImport.update({
  id: '/users-points',
  path: '/users-points',
  getParentRoute: () => rootRoute,
} as any)

const UserStatisticsRoute = UserStatisticsImport.update({
  id: '/user-statistics',
  path: '/user-statistics',
  getParentRoute: () => rootRoute,
} as any)

const UserRoute = UserImport.update({
  id: '/user',
  path: '/user',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const R404Route = R404Import.update({
  id: '/404',
  path: '/404',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/solid-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/404': {
      id: '/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof R404Import
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/user': {
      id: '/user'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserImport
      parentRoute: typeof rootRoute
    }
    '/user-statistics': {
      id: '/user-statistics'
      path: '/user-statistics'
      fullPath: '/user-statistics'
      preLoaderRoute: typeof UserStatisticsImport
      parentRoute: typeof rootRoute
    }
    '/users-points': {
      id: '/users-points'
      path: '/users-points'
      fullPath: '/users-points'
      preLoaderRoute: typeof UsersPointsImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/login': typeof LoginRoute
  '/user': typeof UserRoute
  '/user-statistics': typeof UserStatisticsRoute
  '/users-points': typeof UsersPointsRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/login': typeof LoginRoute
  '/user': typeof UserRoute
  '/user-statistics': typeof UserStatisticsRoute
  '/users-points': typeof UsersPointsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/login': typeof LoginRoute
  '/user': typeof UserRoute
  '/user-statistics': typeof UserStatisticsRoute
  '/users-points': typeof UsersPointsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/404'
    | '/login'
    | '/user'
    | '/user-statistics'
    | '/users-points'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/404' | '/login' | '/user' | '/user-statistics' | '/users-points'
  id:
    | '__root__'
    | '/'
    | '/404'
    | '/login'
    | '/user'
    | '/user-statistics'
    | '/users-points'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  R404Route: typeof R404Route
  LoginRoute: typeof LoginRoute
  UserRoute: typeof UserRoute
  UserStatisticsRoute: typeof UserStatisticsRoute
  UsersPointsRoute: typeof UsersPointsRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  R404Route: R404Route,
  LoginRoute: LoginRoute,
  UserRoute: UserRoute,
  UserStatisticsRoute: UserStatisticsRoute,
  UsersPointsRoute: UsersPointsRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/404",
        "/login",
        "/user",
        "/user-statistics",
        "/users-points"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/404": {
      "filePath": "404.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/user": {
      "filePath": "user.tsx"
    },
    "/user-statistics": {
      "filePath": "user-statistics.tsx"
    },
    "/users-points": {
      "filePath": "users-points.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
